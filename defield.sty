\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{defield}[2021/03/22]

\RequirePackage{tkz-euclide}
\RequirePackage{xparse}
\RequirePackage{pgfopts}

% TODO
% - check margins, they seem uneven
% - feature: multiple solution curves
% - feature: more styling options
% - better way to specify x/y min/max
% - make domain and range mandatory arguments
% POSSIBLE NEW DIRECTION
% - make it usefull within an axes environment

\newif\ifshowaxes
\newif\ifshowscale
\pgfkeys{/defield/.cd,% to set the path
  title/.store in=\plottitle,
  title=unset,
  axes/.is if=showaxes,
  scale/.is if=showscale,
  function/.store in=\function,
  xmin/.store in=\xmin,
  xmax/.store in=\xmax,
  ymin/.store in=\ymin,
  ymax/.store in=\ymax,
  x_0/.store in=\xknown,
  y_0/.store in=\yknown,
  x samples/.store in=\xdivisions,% number of marks in a row - 1
  y samples/.store in=\ydivisions,% number of marks in a column - 1
  resolution/.store in=\xresolution,% solution curve resolution
  % half the lenght of the slope marks
  mark length/.store in=\slopemarklength,
  % bleed is the amount the curve extends past min/max
  x bleed/.store in=\xbleed,
  y bleed/.store in=\ybleed,
  % the tickmarks extend this far in each direction
  x tick size/.store in=\xticksize,
  y tick size/.store in=\yticksize,
  % style of slope marks
  slope style/.code={\pgfkeys{/defield/slope/.style={#1}}},
  slope/.style={cyan, line width=0.5pt},
  % style of solution curve
  curve style/.code={\pgfkeys{/defield/curve/.style={#1}}},
  curve/.style={magenta, stealth-stealth, thick},
  % some aliases:
  no axes/.code={\pgfkeys{/defield/axes=false}},
  no scale/.code={\pgfkeys{/defield/scale=false}},
}
\pgfkeys{/defield/default/.style = {
  title=\empty,
  axes=true,
  scale=true,
  function=f,
  xmin=-1,xmax=1,
  ymin=-1,ymax=1,
  x_0=\empty, y_0=\empty,
  x samples=24,
  y samples=24,
  resolution=0.05,
  mark length=3pt,
  x bleed=0.2,
  y bleed=0.2,
  x tick size=0.2,
  y tick size=0.2,
% more than one option per style is crash
  % slope style={cyan, line width=0.5pt},%cyan, line width=0.5pt,
  % curve style=magenta,%stealth-stealth},%thick},
}}


% TODO: calculate bleed and tick-size from slopemarklength
% \def\xticksize{(\xmax+\xmin)/10}% actually half the tick size
% \def\yticksize{(\ymax+\ymin)/10}% actually half the tick size


\ProcessPgfOptions{/defield}


% #1 star (not implemented)
% #2 options
% #3 pre-plot  tikz to insert
% #4 post-plot tikz to insert
\NewDocumentCommand{\defield}{sO{}oo}{
\begingroup
\pgfkeys{/defield/.cd,default,#2}%

% cant define more than one style
%
% \def\slopestyle{}
% \def\curvestyle{magenta}%, stealth-stealth}

\tkzInit[ymax=\ymax, ymin=\ymin, xmax=\xmax, xmin=\xmin]

#3;

% axes
\ifshowaxes
\draw[->] (\xmin-.5,0) node[above left] {\phantom{$x$}}
      --  (\xmax+.5,0) node[below right] {$x$};
\draw[->] (0,\ymin-.5) node[below right] {\phantom{$y$}}
      --  (0,\ymax+.5) node[above left] {$y$};
% tickmarks
\ifshowscale
\draw (\xmin,\xticksize)--(\xmin,-\xticksize) node[below]{$\xmin$};
\draw (\xmax,\xticksize)--(\xmax,-\xticksize) node[below]{$\xmax$};
\draw (\yticksize,\ymin)--(-\yticksize,\ymin) node[left ]{$\ymin$};
\draw (\yticksize,\ymax)--(-\yticksize,\ymax) node[left ]{$\ymax$};
\fi% tickmarks
\fi% axes



% slope lines
\pgfmathsetmacro{\xnext}{\xmin+(\xmax-\xmin)/\xdivisions}
\pgfmathsetmacro{\ynext}{\ymin+(\ymax-\ymin)/\ydivisions}
\foreach \x in {\xmin,\xnext,...,\xmax}
\foreach \y in {\ymin,\ynext,...,\ymax}
{
  \pgfmathsetmacro{\fprime}{\function(\x,\y)}
  % \def\drawoption={}
  \draw[
    /defield/slope,
    shift={({\x},{\y})}
  ]
    ($(0,0)!-\slopemarklength!(1,1*\fprime)$)
  --($(0,0)! \slopemarklength!(1,1*\fprime)$);
}

% using \ifx for both conditionals is crash
\if\xknown\empty\else\if\yknown\empty\else

% particular solution, marching forwards
\pgfmathsetmacro{\xnext}{\xknown+\xresolution}
\pgfmathsetmacro{\xnextnext}{\xnext+\xresolution}
\pgfmathsetmacro{\y}{\yknown}
\edef\pointlist{(\xknown,\y)}
\pgfmathparse{\xmax+\xbleed}
\foreach \x [remember=\y] in {\xnext,\xnextnext,...,\pgfmathresult}
{
\pgfmathparse{\y<(\ymin-\ybleed) || \y>(\ymax+\ybleed) ?int(1):int(0)}
\ifnum\pgfmathresult=0
\pgfmathsetmacro{\y}{\y+\function(\x,\y)*\xresolution}
\xdef\pointlist{\pointlist (\x,\y)}% append to point list
\fi
}

% and backwards
\pgfmathsetmacro{\xnext}{\xknown-\xresolution}
\pgfmathsetmacro{\xnextnext}{\xnext-\xresolution}
\pgfmathsetmacro{\y}{\yknown}
\pgfmathparse{\xmin-\xbleed}
\foreach \x [remember=\y] in {\xnext,\xnextnext,...,\pgfmathresult}
{
\pgfmathparse{\y<(\ymin-\ybleed) || \y>(\ymax+\ybleed) ?int(1):int(0)}
\ifnum\pgfmathresult=0
\pgfmathsetmacro{\y}{\y-\function(\x,\y)*\xresolution}
\xdef\pointlist{(\x,\y) \pointlist }% prepend to point list
\fi
}
\draw[/defield/curve] plot[smooth] coordinates {\pointlist};

\fi\fi% end of particular solution

#4;

%title
\ifx\plottitle\empty\else
\draw (current bounding box.north) node[above]{\plottitle};
\fi


% \end{tikzpicture}
\endgroup
}

